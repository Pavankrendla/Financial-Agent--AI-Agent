# -*- coding: utf-8 -*-
"""Financial Agent.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AQqRcovGbBPgdU5YS44Ns9N0E8pm_FZ8
"""

!pip install phi yfinance duckduckgo-search

!pip install phidata

!pip install groq

!pip install python-dotenv

!pip install duckduckgo-search

# Import necessary libraries
from phi.agent import Agent
from phi.model.groq import Groq
from phi.tools.yfinance import YFinanceTools
from phi.tools.duckduckgo import DuckDuckGo
import yfinance as yf
from duckduckgo_search import DDGS
import os

import os

# Set API keys directly (not secure for sharing)
os.environ["PHI_API_KEY"] = "XXXXXXXXXXXXXXX"
os.environ["GROQ_API_KEY"] = "XXXXXXXXXXXXXXX"

#Gorq: API:

#Phidata API:

# Web Search Agent
web_search_agent = Agent(
    name="Web Search Agent",
    role="Search the web for information",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[DuckDuckGo()],
    instructions=["Always include sources"],
    show_tools_calls=True,
    markdown=True,
)

# Finance AI Agent
finance_agent = Agent(
    name="Finance AI Agent",
    model=Groq(id="llama-3.3-70b-versatile"),
    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, stock_fundamentals=True)],
    instructions=["Use table to display data"],
    show_tools_calls=True,
    markdown=True,
)

# Multi-AI Agent
multi_ai_agent = Agent(
    team=[web_search_agent, finance_agent],
    model=Groq(id="llama-3.3-70b-versatile"),
    instructions=["Always include sources", "Use table to display the data"],
    show_tools_calls=True,
    markdown=True,
)

#Run the query
multi_ai_agent.print_response("Summarize analyst recommendation and share the latest news for NVDA", stream=True)

#Run the query
multi_ai_agent.print_response("Summarize analyst recommendation and share the latest news for Apple", stream=True)

#Run the query
multi_ai_agent.print_response("Summarize analyst recommendation and share the latest news for INTEL", stream=True)

